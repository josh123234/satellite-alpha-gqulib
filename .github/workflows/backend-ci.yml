name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/backend/**'
      - '.github/workflows/backend-ci.yml'
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/backend/**'
      - '.github/workflows/backend-ci.yml'
    paths-ignore:
      - '**.md'
      - '**.txt'

env:
  NODE_VERSION: '20.x'
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/backend/package.json

      - name: Verify package.json integrity
        run: |
          cd src/backend
          npm audit signatures

      - name: Install dependencies
        run: |
          cd src/backend
          npm ci --audit
          
      - name: Lint code
        run: |
          cd src/backend
          npm run lint -- --max-warnings 0

      - name: Run unit tests
        run: |
          cd src/backend
          npm run test:cov -- --ci --maxWorkers=2 --forceExit

      - name: Run e2e tests
        run: |
          cd src/backend
          npm run test:e2e -- --ci --maxWorkers=2 --forceExit

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: src/backend/coverage
          retention-days: 5

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: src/backend/dist
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run npm audit
        run: |
          cd src/backend
          npm audit --audit-level=high

      - name: Run Snyk security scan
        uses: snyk/actions/node@v1
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
      - name: Run SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: src/backend
          args: >
            -Dsonar.organization=${{ github.repository_owner }}
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Check for secrets exposure
        uses: gitleaks/gitleaks-action@v2
        env:
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            snyk-report.json
            sonar-report.json
          retention-days: 5

  build-container:
    needs: security-scan
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v4
        with:
          buildkitd-flags: --debug

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: src/backend
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/backend:${{ github.sha }}
            ${{ env.DOCKER_REGISTRY }}/backend:latest
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/backend:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/backend:buildcache,mode=max
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Scan container image
        uses: aquasecurity/trivy-action@v1
        with:
          image-ref: ${{ env.DOCKER_REGISTRY }}/backend:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: true

      - name: Sign container image
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.1.1'

      - name: Sign image with Cosign
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign --key ${{ secrets.COSIGN_KEY }} ${{ env.DOCKER_REGISTRY }}/backend:${{ github.sha }}

      - name: Verify image signature
        run: |
          cosign verify --key ${{ secrets.COSIGN_PUBLIC_KEY }} ${{ env.DOCKER_REGISTRY }}/backend:${{ github.sha }}

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

notifications:
  slack:
    on:
      - workflow_failure
      - security_vulnerability
      - coverage_drop
    channel: backend-ci
    mentions: ['@backend-team']
    detailed_report: true